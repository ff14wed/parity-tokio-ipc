var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","string","try_from","try_into","borrow","borrow_mut","type_id","typeid","context","SecurityAttributes","Endpoint","Connection"];

searchIndex["parity_tokio_ipc"]={"doc":"Tokio IPC transport. Under the hood uses Unix Domain…","i":[[3,R[9],"parity_tokio_ipc","Socket permissions and ownership on UNIX",N,N],[3,R[10],E,"Endpoint implementation for unix systems",N,N],[3,R[11],E,"IPC connection.",N,N],[5,"dummy_endpoint",E,"For testing/examples",N,[[],[R[1]]]],[11,"empty",E,"New default security attributes.",0,[[],["self"]]],[11,"allow_everyone_connect",E,"New security attributes that allow everyone to connect.",0,[[],[R[0]]]],[11,"set_mode",E,"Set a custom permission on the socket",0,[[["u16"]],[R[0]]]],[11,"allow_everyone_create",E,"New security attributes that allow everyone to create.",0,[[],[R[0]]]],[11,"incoming",E,"Stream of incoming connections",1,[[["self"]],[R[0]]]],[11,"set_security_attributes",E,"Set security attributes for the connection",1,[[["self"],["securityattributes"]]]],[11,"connect",E,"Make new connection using the provided path and running…",1,[[["path"],["asref",["path"]]]]],[11,"path",E,"Returns the path of the endpoint.",1,[[["self"]],["str"]]],[11,"new",E,"New IPC endpoint at the given path",1,[[[R[1]]],["self"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[[U]],[R[0]]]],[11,R[3],E,E,0,[[],[R[0]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[R[7]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[[U]],[R[0]]]],[11,R[3],E,E,1,[[],[R[0]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[R[7]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[[U]],[R[0]]]],[11,R[3],E,E,2,[[],[R[0]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[T]]],[11,R[6],E,E,2,[[["self"]],[R[7]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"prepare_uninitialized_buffer",E,E,2,[[["self"]],["bool"]]],[11,"poll_read",E,E,2,[[[R[8]],["self"],["pin"]],[[R[0],["usize"]],["poll",[R[0]]]]]],[11,"poll_write",E,E,2,[[[R[8]],["self"],["pin"]],[["poll",[R[0]]],[R[0],["usize","error"]]]]],[11,"poll_flush",E,E,2,[[[R[8]],["self"],["pin"]],[[R[0],["error"]],["poll",[R[0]]]]]],[11,"poll_shutdown",E,E,2,[[[R[8]],["self"],["pin"]],[[R[0],["error"]],["poll",[R[0]]]]]]],"p":[[3,R[9]],[3,R[10]],[3,R[11]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);